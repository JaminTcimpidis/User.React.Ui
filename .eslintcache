<<<<<<< HEAD
[{"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/App.tsx":"1","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/index.tsx":"2","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/reportWebVitals.ts":"3","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user.tsx":"4","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user-list.tsx":"5","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/add-user.tsx":"6","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/create-user-hook.ts":"7","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/api/user.ts":"8","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/utilities/getConfiguration.ts":"9","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/home.tsx":"10","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authProvider.tsx":"11","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/auth.ts":"12","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/constants.ts":"13","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/utils.ts":"14","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authClient.ts":"15","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authContext.ts":"16","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/useAuth.tsx":"17","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/header.tsx":"18","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authedRoute.tsx":"19","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/login.tsx":"20"},{"size":757,"mtime":1626328253321,"results":"21","hashOfConfig":"22"},{"size":848,"mtime":1626042967916,"results":"23","hashOfConfig":"22"},{"size":425,"mtime":1607841838200,"results":"24","hashOfConfig":"22"},{"size":682,"mtime":1626323401537,"results":"25","hashOfConfig":"22"},{"size":1245,"mtime":1625101985192,"results":"26","hashOfConfig":"22"},{"size":1533,"mtime":1608663813127,"results":"27","hashOfConfig":"22"},{"size":940,"mtime":1608663813127,"results":"28","hashOfConfig":"22"},{"size":1533,"mtime":1628661011858,"results":"29","hashOfConfig":"22"},{"size":1516,"mtime":1626038361005,"results":"30","hashOfConfig":"22"},{"size":1295,"mtime":1628655771936,"results":"31","hashOfConfig":"22"},{"size":1380,"mtime":1626140618635,"results":"32","hashOfConfig":"22"},{"size":1997,"mtime":1626140580982,"results":"33","hashOfConfig":"22"},{"size":134,"mtime":1626325855822,"results":"34","hashOfConfig":"22"},{"size":2740,"mtime":1626326732784,"results":"35","hashOfConfig":"22"},{"size":6492,"mtime":1628570949136,"results":"36","hashOfConfig":"22"},{"size":148,"mtime":1626317122444,"results":"37","hashOfConfig":"22"},{"size":1795,"mtime":1628654242408,"results":"38","hashOfConfig":"22"},{"size":652,"mtime":1628659461719,"results":"39","hashOfConfig":"22"},{"size":1133,"mtime":1628655817683,"results":"40","hashOfConfig":"22"},{"size":1026,"mtime":1626327980504,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ha2zb9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/App.tsx",[],["93","94"],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/index.tsx",["95"],"import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider  from './auth/authProvider'\nimport { getConfiguration } from './utilities/getConfiguration'\n\nexport const bootstrap = (async () => {\n  const config = await getConfiguration<AppConfig>();\n\n  return Promise.resolve(render(\n    <AuthProvider config={config}>\n      <HashRouter>\n        <App/>\n      </HashRouter>\n    </AuthProvider>,\n  document.getElementById('root')\n  ))\n})();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/reportWebVitals.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user.tsx",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user-list.tsx",["96"],"import React, { useEffect, useState } from 'react';\nimport { GetUsers } from '../api/user';\nimport { UserComponent }  from './user';\nimport { User } from '../../dtos/user.dtos';\nimport { AddUserComponent } from './add-user';\nimport './user.scss'\nimport { DeleteUser } from '../api/user';\n\nexport const UserListComponent = () => {\n    const [isloading, setIsLoading] = useState(false);\n    const [userList, setUserList] = useState([] as User[])\n  \n\n    useEffect(() => {\n      setIsLoading(true);\n      getUsers();\n      setIsLoading(false);\n    },[userList]);\n\n    const getUsers = () => {\n      GetUsers()\n      .then(res => {\n        setUserList(res)\n      });\n    }\n\n    const deleteUser = async (userId: number) => {\n      await DeleteUser(userId)\n    }\n\n    const renderUsers = (): JSX.Element[] => {\n      return userList.map(user => {\n        return(\n          <UserComponent deleteUser={deleteUser} user={user} key={user.id} />\n        )\n    }\n      );\n    }\n\n    return( \n      <div>\n        <div className=\"header\">\n          <AddUserComponent reloadUser={getUsers}/>\n          <span>Hey welcome. Here are the users</span>\n        </div>\n        <div className=\"container\">\n          {renderUsers()}\n        </div>\n      </div>\n    )\n}","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/add-user.tsx",["97","98"],"import React from 'react';\nimport { AddUser } from '../api/user';\nimport useCreateUserForm from '../hooks/create-user-hook';\nimport { User } from '../../dtos/user.dtos';\n\nexport interface AddUserProps {\n  reloadUser: () => void\n}\n\nexport const AddUserComponent = (props: AddUserProps) => {\n  const {inputs, handleInputChange, handleSubmit} = useCreateUserForm(props.reloadUser); \n    return( \n      <form onSubmit={handleSubmit} className=\"add-user-card\">\n        <div className=\"text\">\n          <label>First Name</label>\n          <input className=\"rounded\" type=\"text\" name=\"firstName\" onChange={handleInputChange} value={inputs.firstName} required />\n        </div >\n        <div className=\"text\">\n        <label>Last Name</label>\n          <input className=\"rounded\" type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.lastName} required />\n        </div>\n        <div className=\"text\">\n          <label>Email Address</label>\n          <input className=\"rounded\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n        </div>\n        {/* <div>\n          <label>Password</label>\n          <input type=\"password\" name=\"password1\" onChange={handleInputChange} value={inputs.password1}/>\n        </div>\n        <div>\n          <label>Re-enter Password</label>\n          <input type=\"password\" name=\"password2\" onChange={handleInputChange} value={inputs.password2}/>\n        </div> */}\n        <button className=\"rounded\" type=\"submit\">Sign Up</button>\n      </form>\n    )\n}","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/create-user-hook.ts",["99"],"import React, { useState } from 'react';\nimport { CreateUserRequest } from '../../dtos/user.dtos';\nimport { AddUser } from '../api/userContext';\n\nconst useCreateUserForm = (callback: any) => {\n  const newUser = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  } as CreateUserRequest\n\n  const [inputs, setInputs] = useState({\n    ...newUser\n  } as CreateUserRequest);\n\n  const handleSubmit = async (event: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const user : CreateUserRequest = {\n      firstName :inputs.firstName,\n      lastName : inputs.lastName,\n      email: inputs.email,\n    };\n    \n    await AddUser(user);\n    callback();\n    setInputs({...newUser})\n  }\n  const handleInputChange = (event: any) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\n\nexport default useCreateUserForm;","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/api/user.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/utilities/getConfiguration.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/home.tsx",["100","101"],"import React from 'react';\nimport { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getRedirectUrl } from '../auth/utils';\nimport { useAuth } from '../hooks/useAuth';\n\nexport const HomeComponent = () => {\n  const { isAuthed } = useAuth();\n\n  useEffect(() => {\n    \n  }, [])\n  \n  const renderHomeScreen = () => {\n    let render = (\n      <div>\n        <h4>Looks like you're not signed in. You should only be able to see this screen so you probably want to sign in</h4>\n      </div>\n    )\n    if (isAuthed()) {\n      const redirectUrl = getRedirectUrl();\n      let redirectHash;\n      if (redirectUrl != \"http://localhost:3000/#/\" && redirectUrl != \"http://localhost:3000/#/login\"){\n        const redirectUrlArray: string[] = redirectUrl.split('#', 2);\n        if(redirectUrlArray.length === 2){\n          redirectHash = redirectUrlArray[1];\n        }\n      }\n      if(redirectHash){\n        render = <Redirect to={redirectHash} />\n      }\n      else {\n        render = (\n          <div>\n            <span>You're signed in</span>\n          </div>\n        )\n      }\n    }\n    return render;\n  }\n\n  return (\n    <div>\n      <h1>Jamin's home scrreen. This so far is a test. I am not sure what I should create as of yet</h1>\n      {renderHomeScreen()}\n    </div>\n  )\n} ","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authProvider.tsx",["102"],"import * as React from 'react';\nimport { AuthClient } from './authClient';\nimport { authenticate } from './auth';\nimport { AuthContext } from './authContext';\n\nexport interface AuthProviderProps{\n  config: AppConfig;\n  children?: React.ReactNode;\n}\n\nexport interface AuthProviderState {\n  authClient: AuthClient;\n  isAuthorized: boolean;\n  isLoading: boolean;\n  error: Error | null;\n  post_logout_redirect_uri: string;\n}\n\n\nconst AuthProvider = (props: AuthProviderProps) => { \n  const [authState, setAuthState] = React.useState({\n    isAuthorized: false,\n    isLoading: true,\n    post_logout_redirect_uri: window.origin\n  } as AuthProviderState)\n\n  React.useEffect(() => {\n    const getAuth = async () => {\n      const { config } = props;\n      let {isAuthorized, isLoading, post_logout_redirect_uri} = authState;\n  \n      isLoading = false;\n  \n      const {authenticated, error, authClient} = await authenticate(config);\n  \n      if( authenticated && !error){\n        isAuthorized = true;\n      }\n  \n      setAuthState({\n        authClient,\n        isLoading,\n        error: error ? new Error(error.message as string) : null,\n        isAuthorized,\n        post_logout_redirect_uri\n      })\n    }\n    \n    getAuth();\n  },[])\n\n  return (\n    <AuthContext.Provider value={authState.authClient}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n};\n\nexport default AuthProvider;","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/auth.ts",["103"],"import createClient, { AuthClient } from './authClient';\nimport { localStorageAuthKey } from '../constants';\nimport { clearStoredJwt, decodeExpirationTime, isAuthed, isStoredTokenValidForOkta, storeJwt } from './utils';\n\nexport type Authenticate = Promise<{\n  authenticated: boolean;\n  error: {\n    message: string | null;\n  } | null,\n  authClient: AuthClient,\n}>;\n\nconst Authenticate = Promise;\n\nexport const authenticate = async (appConfig: AppConfig): Authenticate => {\n  const scopes = ['openid', 'profile', 'email', 'groups'] \n  const hasAccessTokenInParams = window.location.href.includes('?code=');\n\n  if(hasAccessTokenInParams){\n    clearStoredJwt();\n  }\n\n  const authData = localStorage.getItem(localStorageAuthKey);\n  let auth = null;\n  try {\n    auth = authData ? JSON.parse(authData) : null;\n  } catch {\n    // swallow\n  }\n\n  let accessToken;\n  let idToken;\n\n  if (isStoredTokenValidForOkta(auth, appConfig.oAuthDomain)) {\n    accessToken = {\n      accessToken: auth.accessToken,\n      expiresAt: decodeExpirationTime(auth.accessToken) as number,\n      scopes\n    }\n    idToken = {\n      idToken: auth.identityToken,\n      expiresAt: decodeExpirationTime(auth.identityToken) as number,\n      scopes\n    }\n  }\n  else {\n    clearStoredJwt();\n  }\n\n  const authClient = createClient(appConfig, accessToken, idToken)\n\n  authClient.onRenewed((accessToken?: string, identityToken?: string) => {\n    storeJwt(accessToken, identityToken);\n  });\n\n  if(hasAccessTokenInParams || isAuthed()){\n    try {\n      const auth = await authClient.ensureAuthed();\n      storeJwt(auth.accessToken, auth.identityToken);\n      return {\n        authenticated: true,\n        error: null,\n        authClient,\n      }\n    }\n    catch (err){\n      const message = err.message ? err.message : err.toString();\n      return {\n        authenticated: false,\n        error: {\n          message\n        },\n        authClient,\n      }\n    }\n  }\n\n  return {\n    authenticated: false,\n    error: null,\n    authClient,\n  }\n}\n","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/constants.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/utils.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authClient.ts",["104"],"import { OktaAuth, AccessToken, IDToken, UserClaims } from \"@okta/okta-auth-js\";\nimport { setRetry, getRetry, setStateSession, removeRetry, clearStoredJwt } from \"./utils\";\nimport decode from 'jwt-decode';\n\nconst accessTokenKey = \"accessToken\";\nconst idTokenKey = \"idToken\";\n\nexport interface OAuthConfig { \n  oAuthClientId: string,\n  oAuthDomain: string,\n  redirectUri: string,\n  scopes: string[],\n}\n\nexport interface RenewTokenResult{\n  accessToken: string,\n  identityToken?: string,\n  identity?: UserClaims,\n}\n\nexport interface QueryParams {\n  post_logout_redirect_uri: string,\n}\n\nexport interface AuthClient {\n  logout: (queryParams: QueryParams) => Promise<void>,\n  login: () => Promise<void>\n  getIdentity: () => Promise<string>\n  getAccessToken: () => Promise<string>\n  getIdentityToken: () => Promise<string>\n  ensureAuthed: () => Promise<RenewTokenResult>,\n  onRenewed: (callback: (accessToken?: string, identityToken?: string) => void) => void,\n}\n\nexport interface Token {\n  scopes: string[];\n  expiresAt: number;\n  accessToken?: string;\n  idToken?: string;\n}\n\nexport type AuthData = {accessToken?: string, identityToken?: string } | null;\n\nconst createClient = (config: OAuthConfig, accessToken?: Token, idToken?: Token): AuthClient => {\n  const oidc = {\n    clientId: config.oAuthClientId,\n    issuer: config.oAuthDomain,\n    redirectUri: config.redirectUri,\n    scopes: ['openid', 'profile', 'email'],\n    pkce: true,\n    disableHttpsCheck: false\n  }\n\n  const authRetryKey = `${config.oAuthClientId}-auth-retry`;\n  setRetry(authRetryKey, 0);\n\n  const oktaAuthClient = new OktaAuth(oidc);\n\n  if(accessToken) {\n    oktaAuthClient.tokenManager.add(accessTokenKey, accessToken as AccessToken);\n  }\n\n  if(idToken) {\n    oktaAuthClient.tokenManager.add(idTokenKey, idToken as IDToken);\n  }\n\n  oktaAuthClient.tokenManager.on('expired', async(key: string)=> {\n    try {\n      await oktaAuthClient.tokenManager.renew(key);\n    }\n    catch (err) {\n      client.login();\n    }\n  })\n\n  const client = {\n    logout: async(queryParams: QueryParams) => {\n      if (!queryParams.post_logout_redirect_uri){\n        throw new Error('Please specify queryParams.post_logout_redirect_url so we can redirect')\n      }\n      await oktaAuthClient.signOut();\n      clearStoredJwt();\n      window.location.assign(queryParams.post_logout_redirect_uri);\n    },\n    login: async() => {\n      const url = window.location.href.replace(new RegExp(document.baseURI, 'gi'), '') || document.baseURI;\n      const state = setStateSession(url);\n\n      await oktaAuthClient.token.getWithRedirect( {\n        scopes: ['openid','email','profile'],\n        state: state\n      });\n    },\n    getIdentity: async(): Promise<string> => {\n      let token = await oktaAuthClient.tokenManager.get(idTokenKey);\n      return decode((token as IDToken).idToken);\n    },\n    getAccessToken: async(): Promise<string> => {\n      let token = await oktaAuthClient.tokenManager.get(accessTokenKey);\n      return (token as AccessToken).accessToken;\n    },\n    getIdentityToken: async() => {\n      let token = await oktaAuthClient.tokenManager.get(idTokenKey);\n      return (token as IDToken).idToken;\n    },\n    ensureAuthed: async(): Promise<RenewTokenResult> => {\n      if(!window.location.href.includes('?code=')){\n        setRetry(authRetryKey, Number(getRetry(authRetryKey)) + 1)\n        try{\n          const accessTokenObject = await oktaAuthClient.tokenManager.get(accessTokenKey);\n          const identityTokenObject = await oktaAuthClient.tokenManager.get(idTokenKey);\n          if (accessTokenObject && identityTokenObject) {\n            return {\n              accessToken: (accessTokenObject as AccessToken).accessToken,\n              identityToken: (identityTokenObject as IDToken).idToken,\n              identity: (identityTokenObject as IDToken).claims,\n            };\n          }\n          else {\n            const exists = await oktaAuthClient.session.exists();\n            if(exists) {\n              const session = await oktaAuthClient.session.get();\n              if(session.status != \"ACTIVE\") {\n                throw Error(\"no active session wtf!!\")\n              }\n              return await refreshTokensWithSession(oktaAuthClient, config, session)\n            }\n            throw Error('no session at all!')\n          }\n        } \n        catch (err){\n          if(getRetry(authRetryKey) === '3') {\n            throw new Error(\"ahhhhh!\")\n          }\n          client.login();\n          throw new Error(\"noooooo!\")\n        }\n      }\n      else{\n        setRetry(authRetryKey, Number(getRetry(authRetryKey)) + 1 )\n        try{\n          return await parseFromUrl(oktaAuthClient, authRetryKey)\n        }\n        catch (err){\n          throw new Error(\"autthhhhh!\")\n        }\n      }\n    },\n    onRenewed: (callback: (accessToken?: string, idToken?: string) =>  void) => {\n      oktaAuthClient.tokenManager.on('renewed', async (key: string, token: Token) => {\n        const accessToken = (key === accessTokenKey) ? token.accessToken : await client.getAccessToken();\n        const identityToken = (key === idTokenKey) ? token.idToken : await client.getIdentityToken();\n\n        callback(accessToken, identityToken);\n      })\n    }\n  }\n  return client;\n}\n\nconst parseFromUrl = async (oktaAuthClient: OktaAuth, authRetryKey: string): Promise<RenewTokenResult> => {\n  const tokens = await oktaAuthClient.token.parseFromUrl();\n  const accessToken = tokens.tokens.accessToken as AccessToken;\n  const idToken = tokens.tokens.idToken as IDToken;\n\n  oktaAuthClient.tokenManager.add(accessTokenKey, accessToken);\n  oktaAuthClient.tokenManager.add(idTokenKey, idToken);\n\n  removeRetry(authRetryKey);\n  return {\n    accessToken: accessToken?.accessToken,\n    identityToken: idToken?.idToken,\n    identity: idToken?.claims,\n  };\n}\n\nconst refreshTokensWithSession = async (oktaAuthClient: OktaAuth, config: OAuthConfig, session: any): Promise<RenewTokenResult> => {\n  const tokens = await oktaAuthClient.token.getWithoutPrompt({\n    scopes: config.scopes,\n    responseType: ['token', 'id_token'],\n    sessionToken: session.id,\n  })\n\n  oktaAuthClient.tokenManager.add(accessTokenKey, tokens.tokens.accessToken as AccessToken);\n  oktaAuthClient.tokenManager.add(idTokenKey, tokens.tokens.idToken as IDToken);\n\n  return {\n    accessToken: tokens?.tokens?.accessToken?.accessToken,\n    identityToken: tokens?.tokens?.idToken?.idToken,\n    identity: tokens?.tokens?.idToken?.claims,\n  } as RenewTokenResult;\n}\n\nexport default createClient;","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authContext.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/useAuth.tsx",["105"],"import { useContext } from \"react\";\nimport { isAuthed as ensureAuth , isValidToken, setRedirectUrl, getRedirectUrl } from '../auth/utils'\nimport { storeJwt } from \"../auth/utils\";\nimport { AuthContext } from \"../auth/authContext\";\nimport { localStorageAuthKey } from \"../constants\";\nimport { AuthClient, QueryParams, RenewTokenResult } from \"../auth/authClient\";\n\nexport const useAuth = () => {\n  const authClient = useContext(AuthContext) as AuthClient;\n\n  const isAuthed = (): boolean => {\n    if (ensureAuth()){\n      return true;\n    }\n\n    const localStorageToken = localStorage.getItem(localStorageAuthKey);\n    const token = localStorageToken ? JSON.parse(localStorageToken) : undefined;\n\n    if (!token || !isValidToken({accessToken: token.accessToken, identityToken: token.identityToken })){\n      return false;\n    }\n\n    localStorage.removeItem(localStorageAuthKey);\n\n    storeJwt(token.accessToken, token.identityToken)\n\n    return true;\n  }\n\n  const sendToOktaLogin = async (): Promise<void> => {\n    const authResponse = await authClient.ensureAuthed() as RenewTokenResult;\n    if (authResponse.identityToken){\n      storeJwt(authResponse.accessToken, authResponse.identityToken);\n      window.location.replace(getRedirectUrl());\n    }\n  }\n  \n  const login = async (): Promise<void> => {\n    await authClient.login();\n    window.location.replace(getRedirectUrl());\n  }\n\n  const logoutOfOkta = async (): Promise<void> => {\n    const redirectUrl = getRedirectUrl();\n    let redirectUri = window.location.href.split(\"#\")[0];\n    if(redirectUrl){\n      redirectUri = redirectUrl\n    }\n    const queryParams : QueryParams = {\n      post_logout_redirect_uri: redirectUri,\n    }\n    await authClient.logout(queryParams);\n  }\n\n  return { isAuthed, sendToOktaLogin, logoutOfOkta, login };\n}\n","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/header.tsx",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/auth/authedRoute.tsx",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/home/login.tsx",["106"],"import React, {useEffect, useState} from \"react\";\nimport { Redirect } from \"react-router\";\nimport { localStorageAuthRedirectUrl } from \"../constants\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nconst Login = ():JSX.Element => {\n  const { isAuthed, sendToOktaLogin } = useAuth();\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n\n  useEffect(() => {\n    const login = async (): Promise<void> => {\n      await sendToOktaLogin();\n      setIsComplete(true);\n    }\n\n    if (!isAuthed()){\n      login();\n    } else {\n      setIsComplete(true);\n    }\n  },[]);\n\n  if(!isComplete){\n    return <span>loading</span>\n  }\n\n  let redirectHash = \"/\"\n  const redirectUrl = localStorage.getItem(localStorageAuthRedirectUrl);\n  if(redirectUrl) {\n    const redirectUrlArray: string[] = redirectUrl.split('#', 2);\n    if(redirectUrlArray.length === 2){\n      redirectHash = redirectUrlArray[1]\n      localStorage.removeItem(localStorageAuthRedirectUrl);\n    }\n  }\n\n  return <Redirect to={redirectHash} />\n}\n\nexport default Login;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":10,"column":12,"nodeType":"113","messageId":"114","endLine":10,"endColumn":21},{"ruleId":"111","severity":1,"message":"116","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"117","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"118","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":23,"column":23,"nodeType":"121","messageId":"122","endLine":23,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":23,"column":68,"nodeType":"121","messageId":"122","endLine":23,"endColumn":70},{"ruleId":"123","severity":1,"message":"124","line":50,"column":5,"nodeType":"125","endLine":50,"endColumn":7,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":13,"column":7,"nodeType":"113","messageId":"129","endLine":13,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":123,"column":33,"nodeType":"121","messageId":"122","endLine":123,"endColumn":35},{"ruleId":"111","severity":1,"message":"130","line":2,"column":49,"nodeType":"113","messageId":"114","endLine":2,"endColumn":62},{"ruleId":"123","severity":1,"message":"131","line":21,"column":5,"nodeType":"125","endLine":21,"endColumn":7,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'isloading' is assigned a value but never used.","'AddUser' is defined but never used.","'User' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'authState' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["135"],"@typescript-eslint/no-redeclare","'Authenticate' is already defined.","redeclared","'setRedirectUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'isAuthed' and 'sendToOktaLogin'. Either include them or remove the dependency array.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [authState, props]",{"range":"141","text":"142"},"Update the dependencies array to be: [isAuthed, sendToOktaLogin]",{"range":"143","text":"144"},[1221,1223],"[authState, props]",[565,567],"[isAuthed, sendToOktaLogin]"]
=======
[{"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/App.tsx":"1","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/index.tsx":"2","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/reportWebVitals.ts":"3","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user.tsx":"4","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user-list.tsx":"5","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/add-user.tsx":"6","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/create-user-hook.ts":"7","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/api/user.ts":"8"},{"size":279,"mtime":1608663927734,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1607841838198,"results":"11","hashOfConfig":"10"},{"size":425,"mtime":1607841838200,"results":"12","hashOfConfig":"10"},{"size":665,"mtime":1624853049995,"results":"13","hashOfConfig":"10"},{"size":1245,"mtime":1625101985192,"results":"14","hashOfConfig":"10"},{"size":1533,"mtime":1608663813127,"results":"15","hashOfConfig":"10"},{"size":940,"mtime":1608663813127,"results":"16","hashOfConfig":"10"},{"size":1341,"mtime":1624852572563,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ha2zb9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/App.tsx",[],["37","38"],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/index.tsx",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/reportWebVitals.ts",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user.tsx",[],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/user-list.tsx",["39"],"/Users/jduncan/Desktop/GitHub/User.React.Ui/src/user/add-user.tsx",["40","41"],"import React from 'react';\nimport { AddUser } from '../api/user';\nimport useCreateUserForm from '../hooks/create-user-hook';\nimport { User } from '../../dtos/user.dtos';\n\nexport interface AddUserProps {\n  reloadUser: () => void\n}\n\nexport const AddUserComponent = (props: AddUserProps) => {\n  const {inputs, handleInputChange, handleSubmit} = useCreateUserForm(props.reloadUser); \n    return( \n      <form onSubmit={handleSubmit} className=\"add-user-card\">\n        <div className=\"text\">\n          <label>First Name</label>\n          <input className=\"rounded\" type=\"text\" name=\"firstName\" onChange={handleInputChange} value={inputs.firstName} required />\n        </div >\n        <div className=\"text\">\n        <label>Last Name</label>\n          <input className=\"rounded\" type=\"text\" name=\"lastName\" onChange={handleInputChange} value={inputs.lastName} required />\n        </div>\n        <div className=\"text\">\n          <label>Email Address</label>\n          <input className=\"rounded\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n        </div>\n        {/* <div>\n          <label>Password</label>\n          <input type=\"password\" name=\"password1\" onChange={handleInputChange} value={inputs.password1}/>\n        </div>\n        <div>\n          <label>Re-enter Password</label>\n          <input type=\"password\" name=\"password2\" onChange={handleInputChange} value={inputs.password2}/>\n        </div> */}\n        <button className=\"rounded\" type=\"submit\">Sign Up</button>\n      </form>\n    )\n}","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/hooks/create-user-hook.ts",["42"],"import React, { useState } from 'react';\nimport { CreateUserRequest } from '../../dtos/user.dtos';\nimport { AddUser } from '../api/userContext';\n\nconst useCreateUserForm = (callback: any) => {\n  const newUser = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  } as CreateUserRequest\n\n  const [inputs, setInputs] = useState({\n    ...newUser\n  } as CreateUserRequest);\n\n  const handleSubmit = async (event: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const user : CreateUserRequest = {\n      firstName :inputs.firstName,\n      lastName : inputs.lastName,\n      email: inputs.email,\n    };\n    \n    await AddUser(user);\n    callback();\n    setInputs({...newUser})\n  }\n  const handleInputChange = (event: any) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\n\nexport default useCreateUserForm;","/Users/jduncan/Desktop/GitHub/User.React.Ui/src/api/user.ts",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":10,"column":12,"nodeType":"49","messageId":"50","endLine":10,"endColumn":21},{"ruleId":"47","severity":1,"message":"51","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"52","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":14},{"ruleId":"47","severity":1,"message":"53","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'isloading' is assigned a value but never used.","Identifier","unusedVar","'AddUser' is defined but never used.","'User' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> development
